{"ast":null,"code":"var _jsxFileName = \"/Users/anhvu/Desktop/COSC4353/group_project/fuel_rate_calc/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [user, setUser] = useState(() => sessionStorage.getItem('authTokens') ? jwtDecode(sessionStorage.getItem('authTokens')) : null);\n  let [authTokens, setAuthTokens] = useState(() => sessionStorage.getItem('authTokens') ? JSON.parse(sessionStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/token/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.ok) {\n      sessionStorage.setItem('authTokens', JSON.stringify(data));\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      setTimeout(() => navigate('/'), 900);\n      toast.success(\"Logged in successfully\"); // Display success message\n    } else {\n      const errorMessage = data.detail || \"Something went wrong while logging in the user!\";\n      toast.error(errorMessage); // Display error message\n    }\n  };\n  let logoutUser = e => {\n    //e.preventDefault()\n    sessionStorage.removeItem('authTokens');\n    setAuthTokens(null);\n    setUser(null);\n    setTimeout(() => navigate('/login'), 450);\n    toast.dismiss();\n  };\n  const updateToken = useCallback(async () => {\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/token/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      sessionStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  }, [authTokens, setAuthTokens, setUser, logoutUser]);\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    const REFRESH_INTERVAL = 1000 * 60 * 4; // 4 minutes\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"jSI4RZz5mwfV+g9ESuiWQm3F4/U=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useCallback","jwtDecode","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","sessionStorage","getItem","authTokens","setAuthTokens","JSON","parse","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","process","env","REACT_APP_API_BASE_URL","method","headers","body","stringify","username","target","value","password","data","json","ok","setItem","access","setTimeout","success","errorMessage","detail","error","logoutUser","removeItem","dismiss","updateToken","refresh","status","contextData","REFRESH_INTERVAL","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anhvu/Desktop/COSC4353/group_project/fuel_rate_calc/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useCallback } from 'react'\nimport {jwtDecode} from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\nexport const AuthProvider = ({children}) => {\n\n    let [user, setUser] = useState(() => (sessionStorage.getItem('authTokens') ? jwtDecode(sessionStorage.getItem('authTokens')) : null))\n    let [authTokens, setAuthTokens] = useState(() => (sessionStorage.getItem('authTokens') ? JSON.parse(sessionStorage.getItem('authTokens')) : null))\n    let [loading, setLoading] = useState(true)\n\n    const navigate = useNavigate()\n    \n\n    let loginUser = async (e) => {\n        e.preventDefault()\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/token/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username: e.target.username.value, password: e.target.password.value })\n        });\n\n        let data = await response.json();\n\n        if(response.ok){\n            sessionStorage.setItem('authTokens', JSON.stringify(data));\n            setAuthTokens(data);\n            setUser(jwtDecode(data.access));\n            setTimeout(() => navigate('/'), 900);\n            toast.success(\"Logged in successfully\"); // Display success message\n        } else {\n            const errorMessage = data.detail || \"Something went wrong while logging in the user!\";\n            toast.error(errorMessage); // Display error message\n        }\n    };\n\n    let logoutUser = (e) => {\n        //e.preventDefault()\n        sessionStorage.removeItem('authTokens')\n        setAuthTokens(null)\n        setUser(null)\n        setTimeout(() => navigate('/login'), 450);\n        toast.dismiss();\n    }\n\n    const updateToken = useCallback(async () => {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/token/refresh/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({refresh:authTokens?.refresh})\n        })\n\n        const data = await response.json()\n        if (response.status === 200) {\n            setAuthTokens(data)\n            setUser(jwtDecode(data.access))\n            sessionStorage.setItem('authTokens',JSON.stringify(data))\n        } else {\n            logoutUser()\n        }\n\n        if(loading){\n            setLoading(false)\n        }\n    }, [authTokens, setAuthTokens, setUser, logoutUser])\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n    useEffect(()=>{\n        if(loading){\n            updateToken()\n        }\n\n        const REFRESH_INTERVAL = 1000 * 60 * 4 // 4 minutes\n        let interval = setInterval(()=>{\n            if(authTokens){\n                updateToken()\n            }\n        }, REFRESH_INTERVAL)\n        return () => clearInterval(interval)\n\n    },[authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}